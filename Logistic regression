{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMRHfIT39lGruQOOlE3on4F",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Agliullin-Ratmir/Inno_University_AI_Course/blob/main/Logistic%20regression\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "df1 = pd.read_csv('application_record.csv')\n",
        "df2 = pd.read_csv('credit_record.csv')\n",
        "\n",
        "merged_df = pd.merge(df1, df2, on='ID', how='inner')\n",
        "\n",
        "\n",
        "print(\"Размер датасета (строк, столбцов):\", merged_df.shape)\n",
        "\n",
        "# Типы данных в каждом столбце\n",
        "print(\"\\nТипы данных:\")\n",
        "print(merged_df.dtypes)\n",
        "\n",
        "# Первые 10 записей\n",
        "print(\"\\nПервые 10 записей:\")\n",
        "print(merged_df.head(10))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4iolbX-oChQI",
        "outputId": "093a87e3-f5e7-4531-860b-2a6ab4aca04f"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Размер объединённого датасета: (777715, 20)\n",
            "        ID CODE_GENDER FLAG_OWN_CAR FLAG_OWN_REALTY  CNT_CHILDREN  \\\n",
            "0  5008804           M            Y               Y             0   \n",
            "1  5008804           M            Y               Y             0   \n",
            "2  5008804           M            Y               Y             0   \n",
            "3  5008804           M            Y               Y             0   \n",
            "4  5008804           M            Y               Y             0   \n",
            "\n",
            "   AMT_INCOME_TOTAL NAME_INCOME_TYPE NAME_EDUCATION_TYPE NAME_FAMILY_STATUS  \\\n",
            "0          427500.0          Working    Higher education     Civil marriage   \n",
            "1          427500.0          Working    Higher education     Civil marriage   \n",
            "2          427500.0          Working    Higher education     Civil marriage   \n",
            "3          427500.0          Working    Higher education     Civil marriage   \n",
            "4          427500.0          Working    Higher education     Civil marriage   \n",
            "\n",
            "  NAME_HOUSING_TYPE  DAYS_BIRTH  DAYS_EMPLOYED  FLAG_MOBIL  FLAG_WORK_PHONE  \\\n",
            "0  Rented apartment      -12005          -4542           1                1   \n",
            "1  Rented apartment      -12005          -4542           1                1   \n",
            "2  Rented apartment      -12005          -4542           1                1   \n",
            "3  Rented apartment      -12005          -4542           1                1   \n",
            "4  Rented apartment      -12005          -4542           1                1   \n",
            "\n",
            "   FLAG_PHONE  FLAG_EMAIL OCCUPATION_TYPE  CNT_FAM_MEMBERS  MONTHS_BALANCE  \\\n",
            "0           0           0             NaN              2.0               0   \n",
            "1           0           0             NaN              2.0              -1   \n",
            "2           0           0             NaN              2.0              -2   \n",
            "3           0           0             NaN              2.0              -3   \n",
            "4           0           0             NaN              2.0              -4   \n",
            "\n",
            "  STATUS  \n",
            "0      C  \n",
            "1      C  \n",
            "2      C  \n",
            "3      C  \n",
            "4      C  \n",
            "Размер датасета (строк, столбцов): (777715, 20)\n",
            "\n",
            "Типы данных:\n",
            "ID                       int64\n",
            "CODE_GENDER             object\n",
            "FLAG_OWN_CAR            object\n",
            "FLAG_OWN_REALTY         object\n",
            "CNT_CHILDREN             int64\n",
            "AMT_INCOME_TOTAL       float64\n",
            "NAME_INCOME_TYPE        object\n",
            "NAME_EDUCATION_TYPE     object\n",
            "NAME_FAMILY_STATUS      object\n",
            "NAME_HOUSING_TYPE       object\n",
            "DAYS_BIRTH               int64\n",
            "DAYS_EMPLOYED            int64\n",
            "FLAG_MOBIL               int64\n",
            "FLAG_WORK_PHONE          int64\n",
            "FLAG_PHONE               int64\n",
            "FLAG_EMAIL               int64\n",
            "OCCUPATION_TYPE         object\n",
            "CNT_FAM_MEMBERS        float64\n",
            "MONTHS_BALANCE           int64\n",
            "STATUS                  object\n",
            "dtype: object\n",
            "\n",
            "Первые 10 записей:\n",
            "        ID CODE_GENDER FLAG_OWN_CAR FLAG_OWN_REALTY  CNT_CHILDREN  \\\n",
            "0  5008804           M            Y               Y             0   \n",
            "1  5008804           M            Y               Y             0   \n",
            "2  5008804           M            Y               Y             0   \n",
            "3  5008804           M            Y               Y             0   \n",
            "4  5008804           M            Y               Y             0   \n",
            "5  5008804           M            Y               Y             0   \n",
            "6  5008804           M            Y               Y             0   \n",
            "7  5008804           M            Y               Y             0   \n",
            "8  5008804           M            Y               Y             0   \n",
            "9  5008804           M            Y               Y             0   \n",
            "\n",
            "   AMT_INCOME_TOTAL NAME_INCOME_TYPE NAME_EDUCATION_TYPE NAME_FAMILY_STATUS  \\\n",
            "0          427500.0          Working    Higher education     Civil marriage   \n",
            "1          427500.0          Working    Higher education     Civil marriage   \n",
            "2          427500.0          Working    Higher education     Civil marriage   \n",
            "3          427500.0          Working    Higher education     Civil marriage   \n",
            "4          427500.0          Working    Higher education     Civil marriage   \n",
            "5          427500.0          Working    Higher education     Civil marriage   \n",
            "6          427500.0          Working    Higher education     Civil marriage   \n",
            "7          427500.0          Working    Higher education     Civil marriage   \n",
            "8          427500.0          Working    Higher education     Civil marriage   \n",
            "9          427500.0          Working    Higher education     Civil marriage   \n",
            "\n",
            "  NAME_HOUSING_TYPE  DAYS_BIRTH  DAYS_EMPLOYED  FLAG_MOBIL  FLAG_WORK_PHONE  \\\n",
            "0  Rented apartment      -12005          -4542           1                1   \n",
            "1  Rented apartment      -12005          -4542           1                1   \n",
            "2  Rented apartment      -12005          -4542           1                1   \n",
            "3  Rented apartment      -12005          -4542           1                1   \n",
            "4  Rented apartment      -12005          -4542           1                1   \n",
            "5  Rented apartment      -12005          -4542           1                1   \n",
            "6  Rented apartment      -12005          -4542           1                1   \n",
            "7  Rented apartment      -12005          -4542           1                1   \n",
            "8  Rented apartment      -12005          -4542           1                1   \n",
            "9  Rented apartment      -12005          -4542           1                1   \n",
            "\n",
            "   FLAG_PHONE  FLAG_EMAIL OCCUPATION_TYPE  CNT_FAM_MEMBERS  MONTHS_BALANCE  \\\n",
            "0           0           0             NaN              2.0               0   \n",
            "1           0           0             NaN              2.0              -1   \n",
            "2           0           0             NaN              2.0              -2   \n",
            "3           0           0             NaN              2.0              -3   \n",
            "4           0           0             NaN              2.0              -4   \n",
            "5           0           0             NaN              2.0              -5   \n",
            "6           0           0             NaN              2.0              -6   \n",
            "7           0           0             NaN              2.0              -7   \n",
            "8           0           0             NaN              2.0              -8   \n",
            "9           0           0             NaN              2.0              -9   \n",
            "\n",
            "  STATUS  \n",
            "0      C  \n",
            "1      C  \n",
            "2      C  \n",
            "3      C  \n",
            "4      C  \n",
            "5      C  \n",
            "6      C  \n",
            "7      C  \n",
            "8      C  \n",
            "9      C  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "df_filtered = merged_df[merged_df['STATUS'] != 'C']\n",
        "\n",
        "# Общее количество таких заявок\n",
        "total_non_c = len(df_filtered)\n",
        "\n",
        "print(f\"Всего заявок с status ≠ 'C': {total_non_c} ({100 * total_non_c / len(merged_df):.2f}% от всего датасета)\")\n",
        "\n",
        "# 2. Распределение по статусам (одобрено/отклонено)\n",
        "status_counts = df_filtered['STATUS'].value_counts()\n",
        "status_percent = df_filtered['STATUS'].value_counts(normalize=True) * 100\n",
        "\n",
        "print(\"\\nРаспределение статусов (без 'C'):\")\n",
        "print(status_counts)\n",
        "print(\"\\nПроценты:\")\n",
        "print(status_percent)\n",
        "\n",
        "# 3. Проверка сбалансированности классов\n",
        "# Простой способ: посмотреть соотношение самого большого и самого маленького класса\n",
        "if len(status_counts) == 2:\n",
        "    ratio = status_counts.iloc[0] / status_counts.iloc[1]\n",
        "    print(f\"\\nСоотношение классов (больший / меньший): {ratio:.2f}\")\n",
        "    if ratio > 2:\n",
        "        print(\"Классы несбалансированы (разница более чем в 2 раза).\")\n",
        "    else:\n",
        "        print(\"Классы относительно сбалансированы.\")\n",
        "else:\n",
        "    print(f\"\\nВсего классов (без 'C'): {len(status_counts)} — требуется анализ вручную.\")\n",
        "\n",
        "# 4. Визуализация: bar plot\n",
        "plt.figure(figsize=(8, 5))\n",
        "status_counts.plot(kind='bar', color=['skyblue', 'salmon', 'lightgreen', 'orange'][:len(status_counts)])\n",
        "plt.title('Распределение статусов заявок (status ≠ \"C\")')\n",
        "plt.xlabel('Статус')\n",
        "plt.ylabel('Количество заявок')\n",
        "plt.xticks(rotation=0)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 941
        },
        "id": "ldxWy_5oFeXk",
        "outputId": "aeb0d04e-8d04-4c8c-8a6c-d358a3a2db8f"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Всего заявок с status ≠ 'C': 448179 (57.63% от всего датасета)\n",
            "\n",
            "Распределение статусов (без 'C'):\n",
            "STATUS\n",
            "0    290654\n",
            "X    145950\n",
            "1      8747\n",
            "5      1527\n",
            "2       801\n",
            "3       286\n",
            "4       214\n",
            "Name: count, dtype: int64\n",
            "\n",
            "Проценты:\n",
            "STATUS\n",
            "0    64.852213\n",
            "X    32.565113\n",
            "1     1.951676\n",
            "5     0.340712\n",
            "2     0.178723\n",
            "3     0.063814\n",
            "4     0.047749\n",
            "Name: proportion, dtype: float64\n",
            "\n",
            "Всего классов (без 'C'): 7 — требуется анализ вручную.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "df_filtered['target'] = df_filtered['STATUS'].apply(lambda x: 1 if x == 'C' else 0)\n",
        "\n",
        "# -----------------------------\n",
        "# 1. Преобразование признаков\n",
        "# -----------------------------\n",
        "# Возраст в годах (DAYS_BIRTH отрицательный, поэтому берём модуль и делим на 365.25)\n",
        "df_filtered['AGE_YEARS'] = np.abs(df_filtered['DAYS_BIRTH']) / 365.25\n",
        "\n",
        "\n",
        "anomalous_employed = (df_filtered['DAYS_EMPLOYED'] == -365243)\n",
        "df_filtered['DAYS_EMPLOYED_CLEAN'] = df_filtered['DAYS_EMPLOYED'].replace(-365243, np.nan)\n",
        "df_filtered['YEARS_EMPLOYED'] = np.abs(df_filtered['DAYS_EMPLOYED_CLEAN']) / 365.25\n",
        "df_filtered\n",
        "# Доход оставляем как есть\n",
        "numeric_cols = ['AGE_YEARS', 'AMT_INCOME_TOTAL', 'YEARS_EMPLOYED']\n",
        "\n",
        "# -----------------------------\n",
        "# 2. Основные статистики\n",
        "# -----------------------------\n",
        "print(\"Основные статистики числовых признаков:\")\n",
        "stats = df_filtered[numeric_cols].describe()\n",
        "print(stats)\n",
        "\n",
        "# -----------------------------\n",
        "# 3. Гистограммы распределений\n",
        "# -----------------------------\n",
        "fig, axes = plt.subplots(1, 3, figsize=(18, 5))\n",
        "\n",
        "for i, col in enumerate(numeric_cols):\n",
        "    axes[i].hist(df_filtered[col].dropna(), bins=50, color='skyblue', edgecolor='black')\n",
        "    axes[i].set_title(f'Гистограмма: {col}')\n",
        "    axes[i].set_xlabel(col)\n",
        "    axes[i].set_ylabel('Частота')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# -----------------------------\n",
        "# 4. Boxplot для поиска выбросов\n",
        "# -----------------------------\n",
        "fig, axes = plt.subplots(1, 3, figsize=(18, 5))\n",
        "\n",
        "for i, col in enumerate(numeric_cols):\n",
        "    axes[i].boxplot(df_filtered[col].dropna(), vert=False)\n",
        "    axes[i].set_title(f'Boxplot: {col}')\n",
        "    axes[i].set_xlabel(col)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# -----------------------------\n",
        "# 5. Корреляция с целевой переменной\n",
        "# -----------------------------\n",
        "# Вычислим корреляцию Пирсона\n",
        "corr_with_target = df_filtered[numeric_cols + ['target']].corr()['target'].drop('target')\n",
        "\n",
        "print(\"\\nКорреляция числовых признаков с целевой переменной (target):\")\n",
        "print(corr_with_target)\n",
        "\n",
        "# Визуализация корреляции\n",
        "plt.figure(figsize=(8, 5))\n",
        "corr_with_target.plot(kind='bar', color='coral')\n",
        "plt.title('Корреляция признаков с целевой переменной')\n",
        "plt.ylabel('Коэффициент корреляции Пирсона')\n",
        "plt.axhline(0, color='black', linewidth=0.8)\n",
        "plt.xticks(rotation=0)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "JFMnDoIYIkGw",
        "outputId": "78deea60-2845-4e85-d060-e5277758233b"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-2950733626.py:2: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_filtered['target'] = df_filtered['STATUS'].apply(lambda x: 1 if x == 'C' else 0)\n",
            "/tmp/ipython-input-2950733626.py:8: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_filtered['AGE_YEARS'] = np.abs(df_filtered['DAYS_BIRTH']) / 365.25\n",
            "/tmp/ipython-input-2950733626.py:12: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_filtered['DAYS_EMPLOYED_CLEAN'] = df_filtered['DAYS_EMPLOYED'].replace(-365243, np.nan)\n",
            "/tmp/ipython-input-2950733626.py:13: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_filtered['YEARS_EMPLOYED'] = np.abs(df_filtered['DAYS_EMPLOYED_CLEAN']) / 365.25\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Основные статистики числовых признаков:\n",
            "           AGE_YEARS  AMT_INCOME_TOTAL  YEARS_EMPLOYED\n",
            "count  448179.000000      4.481790e+05   448179.000000\n",
            "mean       44.089233      1.914614e+05      168.785207\n",
            "std        11.181174      1.045223e+05      366.095505\n",
            "min        20.503765      2.700000e+04        0.046543\n",
            "25%        34.915811      1.260000e+05        3.356605\n",
            "50%        43.104723      1.665000e+05        7.195072\n",
            "75%        53.199179      2.250000e+05       15.887748\n",
            "max        68.862423      1.575000e+06      999.980835\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x500 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x500 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Корреляция числовых признаков с целевой переменной (target):\n",
            "AGE_YEARS          NaN\n",
            "AMT_INCOME_TOTAL   NaN\n",
            "YEARS_EMPLOYED     NaN\n",
            "Name: target, dtype: float64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_cat = df_filtered[df_filtered['STATUS'] != 'C'].copy()\n",
        "\n",
        "# Создаём бинарный признак: одобрено ли?\n",
        "df_cat['approved'] = df_cat['STATUS']\n",
        "\n",
        "# Список категориальных колонок\n",
        "cat_cols = ['CODE_GENDER', 'NAME_EDUCATION_TYPE', 'OCCUPATION_TYPE']\n",
        "\n",
        "# -----------------------------\n",
        "# 2. Анализ по каждой категории\n",
        "# -----------------------------\n",
        "for col in cat_cols:\n",
        "    print(f\"\\n{'='*60}\")\n",
        "    print(f\"Анализ признака: {col}\")\n",
        "    print('='*60)\n",
        "\n",
        "    # Группируем по категории и считаем:\n",
        "    # - общее количество заявок\n",
        "    # - количество одобрений\n",
        "    # - процент одобрений\n",
        "    summary = df_cat.groupby(col)['approved'].agg(\n",
        "        total='count',\n",
        "        approved_sum='sum'\n",
        "    )\n",
        "    summary['approval_rate_%'] = (summary['approved_sum'] / summary['total']) * 100\n",
        "    summary = summary.sort_values('approval_rate_%', ascending=False)\n",
        "\n",
        "    print(summary[['total', 'approval_rate_%']].round(2))\n",
        "\n",
        "    # Наиболее и наименее рискованные категории\n",
        "    best = summary.index[0]\n",
        "    worst = summary.index[-1]\n",
        "    print(f\"\\n✅ Наиболее надёжная категория: {best} ({summary.loc[best, 'approval_rate_%']:.2f}%)\")\n",
        "    print(f\"❌ Наиболее рискованная категория: {worst} ({summary.loc[worst, 'approval_rate_%']:.2f}%)\")\n",
        "\n",
        "    # -----------------------------\n",
        "    # 3. Визуализация: bar plot процентов одобрений\n",
        "    # -----------------------------\n",
        "    plt.figure(figsize=(10, 5))\n",
        "    bars = plt.bar(summary.index, summary['approval_rate_%'], color='lightgreen')\n",
        "    plt.title(f'Процент одобрений по категориям: {col}')\n",
        "    plt.ylabel('Процент одобрений (%)')\n",
        "    plt.xlabel(col)\n",
        "    plt.xticks(rotation=45, ha='right')\n",
        "\n",
        "    # Добавим значения над столбцами\n",
        "    for bar in bars:\n",
        "        height = bar.get_height()\n",
        "        plt.text(bar.get_x() + bar.get_width()/2., height + 0.5,\n",
        "                 f'{height:.1f}%', ha='center', va='bottom')\n",
        "\n",
        "    plt.tight_layout()\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "brWOXPjpKobx",
        "outputId": "0020711e-72fc-4684-c6b1-8c17138c1552"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "============================================================\n",
            "Анализ признака: CODE_GENDER\n",
            "============================================================\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "unsupported operand type(s) for /: 'str' and 'int'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/ops/array_ops.py\u001b[0m in \u001b[0;36m_na_arithmetic_op\u001b[0;34m(left, right, op, is_cmp)\u001b[0m\n\u001b[1;32m    217\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 218\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    219\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/computation/expressions.py\u001b[0m in \u001b[0;36mevaluate\u001b[0;34m(op, a, b, use_numexpr)\u001b[0m\n\u001b[1;32m    241\u001b[0m             \u001b[0;31m# error: \"None\" not callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 242\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0m_evaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop_str\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    243\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0m_evaluate_standard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop_str\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/computation/expressions.py\u001b[0m in \u001b[0;36m_evaluate_numexpr\u001b[0;34m(op, op_str, a, b)\u001b[0m\n\u001b[1;32m    130\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 131\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_evaluate_standard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop_str\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    132\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/computation/expressions.py\u001b[0m in \u001b[0;36m_evaluate_standard\u001b[0;34m(op, op_str, a, b)\u001b[0m\n\u001b[1;32m     72\u001b[0m         \u001b[0m_store_test_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for /: 'str' and 'int'",
            "\nDuring handling of the above exception, another exception occurred:\n",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-2960381613.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     23\u001b[0m         \u001b[0mapproved_sum\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'sum'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m     )\n\u001b[0;32m---> 25\u001b[0;31m     \u001b[0msummary\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'approval_rate_%'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'approved_sum'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0msummary\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'total'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m     \u001b[0msummary\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msummary\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'approval_rate_%'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mascending\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/ops/common.py\u001b[0m in \u001b[0;36mnew_method\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m     74\u001b[0m         \u001b[0mother\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mitem_from_zerodim\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mnew_method\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/arraylike.py\u001b[0m in \u001b[0;36m__truediv__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m    208\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0munpack_zerodim_and_defer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"__truediv__\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__truediv__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 210\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moperator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtruediv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    211\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0munpack_zerodim_and_defer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"__rtruediv__\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_arith_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m   6133\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6134\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_align_for_op\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mother\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6135\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mbase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mIndexOpsMixin\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_arith_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mother\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6136\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6137\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_align_for_op\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malign_asobject\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/base.py\u001b[0m in \u001b[0;36m_arith_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m   1380\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1381\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merrstate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mall\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1382\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mops\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marithmetic_op\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1383\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1384\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_construct_result\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mres_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/ops/array_ops.py\u001b[0m in \u001b[0;36marithmetic_op\u001b[0;34m(left, right, op)\u001b[0m\n\u001b[1;32m    281\u001b[0m         \u001b[0;31m# error: Argument 1 to \"_na_arithmetic_op\" has incompatible type\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    282\u001b[0m         \u001b[0;31m# \"Union[ExtensionArray, ndarray[Any, Any]]\"; expected \"ndarray[Any, Any]\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 283\u001b[0;31m         \u001b[0mres_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_na_arithmetic_op\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[arg-type]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    284\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    285\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mres_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/ops/array_ops.py\u001b[0m in \u001b[0;36m_na_arithmetic_op\u001b[0;34m(left, right, op, is_cmp)\u001b[0m\n\u001b[1;32m    225\u001b[0m             \u001b[0;31m# Don't do this for comparisons, as that will handle complex numbers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    226\u001b[0m             \u001b[0;31m#  incorrectly, see GH#32047\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 227\u001b[0;31m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_masked_arith_op\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    228\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m             \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/ops/array_ops.py\u001b[0m in \u001b[0;36m_masked_arith_op\u001b[0;34m(x, y, op)\u001b[0m\n\u001b[1;32m    161\u001b[0m         \u001b[0;31m# See GH#5284, GH#5035, GH#19448 for historical reference\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    162\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 163\u001b[0;31m             \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mxrav\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0myrav\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    164\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    165\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for /: 'str' and 'int'"
          ]
        }
      ]
    }
  ]
}